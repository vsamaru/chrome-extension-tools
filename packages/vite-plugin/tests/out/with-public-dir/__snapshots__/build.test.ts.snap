// Vitest Snapshot v1

exports[`build fs output > _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_icon": Object {
      "128": "icons/action-icon-128.png",
      "16": "icons/action-icon-16.png",
      "32": "icons/action-icon-32.png",
      "48": "icons/action-icon-48.png",
    },
    "default_popup": "src/popup.html",
  },
  "description": "Chrome Extension with a public dir",
  "icons": Object {
    "128": "icons/manifest-icon-128.png",
    "16": "icons/manifest-icon-16.png",
    "32": "icons/manifest-icon-32.png",
    "48": "icons/manifest-icon-48.png",
  },
  "manifest_version": 3,
  "name": "public dir test extension",
  "version": "1.0.0",
}
`;

exports[`build fs output > _01 output files 1`] = `
Array [
  "assets/popup.html.hash0.js",
  "favicon.svg",
  "icons/action-icon-128.png",
  "icons/action-icon-16.png",
  "icons/action-icon-32.png",
  "icons/action-icon-48.png",
  "icons/manifest-icon-128.png",
  "icons/manifest-icon-16.png",
  "icons/manifest-icon-32.png",
  "icons/manifest-icon-48.png",
  "manifest.json",
  "src/popup.html",
]
`;

exports[`build fs output > assets/popup.html.hash0.js 1`] = `
"(function polyfill() {
  const relList = document.createElement(\\"link\\").relList;
  if (relList && relList.supports && relList.supports(\\"modulepreload\\")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel=\\"modulepreload\\"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== \\"childList\\") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === \\"LINK\\" && node.rel === \\"modulepreload\\")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(script) {
    const fetchOpts = {};
    if (script.integrity)
      fetchOpts.integrity = script.integrity;
    if (script.referrerpolicy)
      fetchOpts.referrerPolicy = script.referrerpolicy;
    if (script.crossorigin === \\"use-credentials\\")
      fetchOpts.credentials = \\"include\\";
    else if (script.crossorigin === \\"anonymous\\")
      fetchOpts.credentials = \\"omit\\";
    else
      fetchOpts.credentials = \\"same-origin\\";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
console.log(\\"popup script\\");
"
`;

exports[`build fs output > src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <meta charset=\\"UTF-8\\" />
    <meta name=\\"viewport\\" content=\\"width=1000, initial-scale=1.0\\" />
    <link rel=\\"icon\\" type=\\"image/svg+xml\\" href=\\"/favicon.svg\\" />
    <title>Popup Page</title>
    <script type=\\"module\\" crossorigin src=\\"/assets/popup.html.hash0.js\\"></script>
  </head>
  <body>
    <div id=\\"root\\"></div>
    
  </body>
</html>
"
`;
