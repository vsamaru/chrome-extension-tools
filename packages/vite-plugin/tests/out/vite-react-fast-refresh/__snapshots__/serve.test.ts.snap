// Vitest Snapshot v1

exports[`serve fs output > _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_popup": "src/popup.html",
  },
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "src/content.tsx-loader.js",
      ],
      "matches": Array [
        "http://*/*",
      ],
    },
  ],
  "manifest_version": 3,
  "name": "test extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`serve fs output > _01 output files 1`] = `
Array [
  "assets/precontroller.hash0.js",
  "manifest.json",
  "service-worker-loader.js",
  "src/App.tsx.js",
  "src/content.tsx-loader.js",
  "src/content.tsx.js",
  "src/popup.html",
  "vendor/chunk-D6CDYV2H.js__v--hash.js",
  "vendor/crx-client-port.js",
  "vendor/crx-client-preamble.js",
  "vendor/id-__x00__react-jsx-dev-runtime.js",
  "vendor/react-dom.js__v--hash.js",
  "vendor/react-refresh.js",
  "vendor/react_jsx-dev-runtime.js__v--hash.js",
  "vendor/vite-client.js",
  "vendor/vite-dist-client-env.mjs.js",
  "vendor/webcomponents-custom-elements.js",
]
`;

exports[`serve fs output > _02 optimized deps 1`] = `
Set {
  "src/content.tsx",
  "src/popup.html",
}
`;

exports[`serve fs output > assets/precontroller.hash0.js 1`] = `
"const id = setInterval(() => location.reload(), 100);
setTimeout(() => clearInterval(id), 5e3);
"
`;

exports[`serve fs output > service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@vite/env';
import 'http://localhost:3000/@crx/client-worker';
"
`;

exports[`serve fs output > src/App.tsx.js 1`] = `
"import { createHotContext as __vite__createHotContext } from \\"/vendor/vite-client.js\\";import.meta.hot = __vite__createHotContext(\\"/src/App.tsx.js\\");import RefreshRuntime from \\"/vendor/react-refresh.js\\";
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error(\\"@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\\");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, \\"<root>/src/App.tsx \\" + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _jsxFileName = \\"<root>/src/App.tsx\\";
import { jsxDEV as _jsxDEV } from \\"/vendor/id-__x00__react-jsx-dev-runtime.js\\";
const App = () => {
  return /* @__PURE__ */ _jsxDEV(\\"div\\", {
    children: [/* @__PURE__ */ _jsxDEV(\\"h1\\", {
      children: \\"Popup Page\\"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 6,
      columnNumber: 7
    }, void 0), /* @__PURE__ */ _jsxDEV(\\"p\\", {
      children: \\"If you are seeing this, React is working!\\"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 7,
      columnNumber: 7
    }, void 0)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 5
  }, void 0);
};
_c = App;
export default App;
var _c;
$RefreshReg$(_c, \\"App\\");
if (import.meta.hot) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
  import.meta.hot.accept();
  if (!window.__vite_plugin_react_timeout) {
    window.__vite_plugin_react_timeout = setTimeout(() => {
      window.__vite_plugin_react_timeout = 0;
      RefreshRuntime.performReactRefresh();
    }, 30);
  }
}
"
`;

exports[`serve fs output > src/content.tsx.js 1`] = `
"var _jsxFileName = \\"<root>/src/content.tsx\\";
import __vite__cjsImport0_reactDom from \\"/vendor/react-dom.js__v--hash.js\\"; const render = __vite__cjsImport0_reactDom[\\"render\\"];
import App from \\"/src/App.tsx.js\\";
import { jsxDEV as _jsxDEV } from \\"/vendor/id-__x00__react-jsx-dev-runtime.js\\";
console.log(\\"content script\\");
const root = document.createElement(\\"div\\");
root.id = \\"root\\";
document.body.append(root);
render(/* @__PURE__ */ _jsxDEV(App, {}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 10,
  columnNumber: 8
}, this), root);
"
`;

exports[`serve fs output > src/content.tsx-loader.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    if (\\"vendor/crx-client-preamble.js\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"vendor/crx-client-preamble.js\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"src/content.tsx.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`serve fs output > src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <title>Waiting for the extension service worker...</title>
    <script src=\\"/assets/precontroller.hash0.js\\"></script>
  </head>
  <body>
    <h1>Waiting for service worker</h1>

    <p>
      If you see this message, it means the service worker has not loaded fully.
    </p>

    <p>This page is never added in production.</p>
  </body>
</html>
"
`;
