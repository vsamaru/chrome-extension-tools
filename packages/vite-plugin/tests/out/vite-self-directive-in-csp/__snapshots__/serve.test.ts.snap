// Vitest Snapshot v1

exports[`works with 'self' directive > _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_popup": "src/popup.html",
  },
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "src/content.ts-loader.js",
      ],
      "matches": Array [
        "https://*/*",
        "http://*/*",
      ],
    },
  ],
  "content_security_policy": Object {
    "extension_pages": "script-src 'self'; object-src 'self';",
  },
  "description": "test extension",
  "manifest_version": 3,
  "name": "test extension",
  "version": "0.1.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`works with 'self' directive > _01 output files 1`] = `
Array [
  "assets/precontroller.hash0.js",
  "manifest.json",
  "service-worker-loader.js",
  "src/content.ts-loader.js",
  "src/content.ts.js",
  "src/popup.html",
  "vendor/crx-client-port.js",
  "vendor/vite-client.js",
  "vendor/vite-dist-client-env.mjs.js",
  "vendor/webcomponents-custom-elements.js",
]
`;

exports[`works with 'self' directive > _02 optimized deps 1`] = `
Set {
  "src/content.ts",
  "src/background.ts",
  "src/popup.html",
}
`;

exports[`works with 'self' directive > assets/precontroller.hash0.js 1`] = `
"const id = setInterval(() => location.reload(), 100);
setTimeout(() => clearInterval(id), 5e3);
"
`;

exports[`works with 'self' directive > service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@vite/env';
import 'http://localhost:3000/@crx/client-worker';
import 'http://localhost:3000/src/background.ts';
"
`;

exports[`works with 'self' directive > src/content.ts.js 1`] = `
"console.log(\\"content script\\");
export {};
"
`;

exports[`works with 'self' directive > src/content.ts-loader.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"src/content.ts.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`works with 'self' directive > src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <title>Waiting for the extension service worker...</title>
    <script src=\\"/assets/precontroller.hash0.js\\"></script>
  </head>
  <body>
    <h1>Waiting for service worker</h1>

    <p>
      If you see this message, it means the service worker has not loaded fully.
    </p>

    <p>This page is never added in production.</p>
  </body>
</html>
"
`;
