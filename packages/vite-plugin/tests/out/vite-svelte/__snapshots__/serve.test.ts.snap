// Vitest Snapshot v1

exports[`serve fs output > _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_popup": "src/popup.html",
  },
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "src/content.js-loader.js",
      ],
      "matches": Array [
        "http://*/*",
      ],
    },
  ],
  "manifest_version": 3,
  "name": "test extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`serve fs output > _01 output files 1`] = `
Array [
  "assets/precontroller.hash.js",
  "favicon.ico",
  "manifest.json",
  "service-worker-loader.js",
  "src/App.svelte.js",
  "src/App.svelte__svelte_type--style_lang.css.js",
  "src/assets/svelte.png",
  "src/assets/svelte.png__import.js",
  "src/content.js-loader.js",
  "src/content.js.js",
  "src/lib/Counter.svelte.js",
  "src/lib/Counter.svelte__svelte_type--style_lang.css.js",
  "src/popup.html",
  "vendor/chunk-3BFMV3YN.js__v--hash.js",
  "vendor/crx-client-port.js",
  "vendor/svelte-hmr-runtime-hot-api-esm.js__v--hash.js",
  "vendor/svelte-hmr-runtime-hot-api.js__v--hash.js",
  "vendor/svelte-hmr-runtime-index.js__v--hash.js",
  "vendor/svelte-hmr-runtime-overlay.js__v--hash.js",
  "vendor/svelte-hmr-runtime-proxy-adapter-dom.js__v--hash.js",
  "vendor/svelte-hmr-runtime-proxy.js__v--hash.js",
  "vendor/svelte-hmr-runtime-svelte-hooks.js__v--hash.js",
  "vendor/svelte_internal.js__v--hash.js",
  "vendor/vite-client.js",
  "vendor/vite-dist-client-env.mjs.js",
  "vendor/webcomponents-custom-elements.js",
]
`;

exports[`serve fs output > _02 optimized deps 1`] = `
Set {
  "src/content.js",
  "src/popup.html",
}
`;

exports[`serve fs output > assets/precontroller.hash.js 1`] = `
"const id = setInterval(() => location.reload(), 100);
setTimeout(() => clearInterval(id), 5e3);
"
`;

exports[`serve fs output > service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@vite/env';
import 'http://localhost:3000/@crx/client-worker';
"
`;

exports[`serve fs output > src/App.svelte.js 1`] = `
"import { createHotContext as __vite__createHotContext } from \\"/vendor/vite-client.js\\";import.meta.hot = __vite__createHotContext(\\"/src/App.svelte.js\\");/* tests/out/vite-svelte/src/App.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev as SvelteComponentDev$,
	add_location as add_location$,
	append_dev as append_dev$,
	attr_dev as attr_dev$,
	create_component as create_component$,
	destroy_component as destroy_component$,
	detach_dev as detach_dev$,
	dispatch_dev as dispatch_dev$,
	element as element$,
	globals as globals$,
	init as init$,
	insert_dev as insert_dev$,
	mount_component as mount_component$,
	noop as noop$,
	safe_not_equal as safe_not_equal$,
	space as space$,
	src_url_equal as src_url_equal$,
	text as text$,
	transition_in as transition_in$,
	transition_out as transition_out$,
	validate_slots as validate_slots$
} from \\"/vendor/svelte_internal.js__v--hash.js\\";

const { Error: Error$, Object: Object$, console: console$ } = globals$;
import logo from '/src/assets/svelte.png__import.js';
import Counter from '/src/lib/Counter.svelte.js';
const file$ = \\"tests/out/vite-svelte/src/App.svelte\\";

function create_fragment(ctx) {
	let main$;
	let img$;
	let img$_src_value$;
	let t0$;
	let h1$;
	let t2$;
	let counter$;
	let t3$;
	let p0$;
	let t4$;
	let a0$;
	let t6$;
	let t7$;
	let p1$;
	let t8$;
	let a1$;
	let t10$;
	let current;
	counter$ = new Counter({ $$inline: true });

	const block$ = {
		c: function create() {
			main$ = element$(\\"main\\");
			img$ = element$(\\"img\\");
			t0$ = space$();
			h1$ = element$(\\"h1\\");
			h1$.textContent = \\"Hello world!\\";
			t2$ = space$();
			create_component$(counter$.$$.fragment);
			t3$ = space$();
			p0$ = element$(\\"p\\");
			t4$ = text$(\\"Visit \\");
			a0$ = element$(\\"a\\");
			a0$.textContent = \\"svelte.dev\\";
			t6$ = text$(\\" to learn how to build Svelte\\\\n    apps.\\");
			t7$ = space$();
			p1$ = element$(\\"p\\");
			t8$ = text$(\\"Check out \\");
			a1$ = element$(\\"a\\");
			a1$.textContent = \\"SvelteKit\\";
			t10$ = text$(\\" for\\\\n    the officially supported framework, also powered by Vite!\\");
			if (!src_url_equal$(img$.src, img$_src_value$ = logo)) attr_dev$(img$, \\"src\\", img$_src_value$);
			attr_dev$(img$, \\"alt\\", \\"Svelte Logo\\");
			attr_dev$(img$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(img$, file$, 6, 2, 115);
			attr_dev$(h1$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(h1$, file$, 7, 2, 154);
			attr_dev$(a0$, \\"href\\", \\"https://svelte.dev\\");
			attr_dev$(a0$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(a0$, file$, 12, 10, 208);
			attr_dev$(p0$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(p0$, file$, 11, 2, 194);
			attr_dev$(a1$, \\"href\\", \\"https://github.com/sveltejs/kit#readme\\");
			attr_dev$(a1$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(a1$, file$, 17, 14, 319);
			attr_dev$(p1$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(p1$, file$, 16, 2, 301);
			attr_dev$(main$, \\"class\\", \\"s-XsEmFtvddWTw\\");
			add_location$(main$, file$, 5, 0, 106);
		},
		l: function claim(nodes) {
			throw new Error$(\\"options.hydrate only works if the component was compiled with the \`hydratable: true\` option\\");
		},
		m: function mount(target, anchor) {
			insert_dev$(target, main$, anchor);
			append_dev$(main$, img$);
			append_dev$(main$, t0$);
			append_dev$(main$, h1$);
			append_dev$(main$, t2$);
			mount_component$(counter$, main$, null);
			append_dev$(main$, t3$);
			append_dev$(main$, p0$);
			append_dev$(p0$, t4$);
			append_dev$(p0$, a0$);
			append_dev$(p0$, t6$);
			append_dev$(main$, t7$);
			append_dev$(main$, p1$);
			append_dev$(p1$, t8$);
			append_dev$(p1$, a1$);
			append_dev$(p1$, t10$);
			current = true;
		},
		p: noop$,
		i: function intro(local) {
			if (current) return;
			transition_in$(counter$.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out$(counter$.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev$(main$);
			destroy_component$(counter$);
		}
	};

	dispatch_dev$(\\"SvelteRegisterBlock\\", {
		block: block$,
		id: create_fragment.name,
		type: \\"component\\",
		source: \\"\\",
		ctx
	});

	return block$;
}

function instance$($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots$('App', slots, []);
	const writable_props = [];

	Object$.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console$.warn(\`<App> was created with unknown prop '\${key}'\`);
	});

	$$self.$capture_state = () => ({ logo, Counter });
	return [];
}

class App$ extends SvelteComponentDev$ {
	constructor(options) {
		super(options);
		init$(this, options, instance$, create_fragment, safe_not_equal$, {});

		dispatch_dev$(\\"SvelteRegisterComponent\\", {
			component: this,
			tagName: \\"App$\\",
			options,
			id: create_fragment.name
		});
	}
}

import * as ___SVELTE_HMR_HOT_API from '/vendor/svelte-hmr-runtime-hot-api-esm.js__v--hash.js';import { adapter as ___SVELTE_HMR_HOT_API_PROXY_ADAPTER } from '/vendor/svelte-hmr-runtime-proxy-adapter-dom.js__v--hash.js';if (import.meta && import.meta.hot) { if (false) import.meta.hot.acceptExports(['default']);; App$ = ___SVELTE_HMR_HOT_API.applyHmr({ m: import.meta, id: \\"<root>/src/App.svelte\\", hotOptions: {\\"preserveLocalState\\":false,\\"noPreserveStateKey\\":[\\"@hmr:reset\\",\\"@!hmr\\"],\\"preserveAllLocalStateKey\\":\\"@hmr:keep-all\\",\\"preserveLocalStateKey\\":\\"@hmr:keep\\",\\"noReload\\":false,\\"optimistic\\":false,\\"acceptNamedExports\\":true,\\"acceptAccessors\\":true,\\"injectCss\\":false,\\"cssEjectDelay\\":100,\\"native\\":false,\\"importAdapterName\\":\\"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\\",\\"noOverlay\\":true,\\"allowLiveBinding\\":false,\\"partialAccept\\":true}, Component: App$, ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER, acceptable: true, preserveLocalState: false, emitCss: true, }); }
export default App$;


import \\"/src/App.svelte__svelte_type--style_lang.css.js\\";
"
`;

exports[`serve fs output > src/App.svelte__svelte_type--style_lang.css.js 1`] = `
"import { createHotContext as __vite__createHotContext } from \\"/vendor/vite-client.js\\";import.meta.hot = __vite__createHotContext(\\"/src/App.svelte__svelte_type--style_lang.css.js\\");import { updateStyle as __vite__updateStyle, removeStyle as __vite__removeStyle } from \\"/vendor/vite-client.js\\"
const __vite__id = \\"<root>/src/App.svelte?svelte&type=style&lang.css\\"
const __vite__css = \\":root{font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\\\\n      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif}main.s-XsEmFtvddWTw{text-align:center;padding:1em;margin:0 auto}img.s-XsEmFtvddWTw{height:16rem;width:16rem}h1.s-XsEmFtvddWTw{color:#ff3e00;text-transform:uppercase;font-size:4rem;font-weight:100;line-height:1.1;margin:2rem auto;max-width:14rem}p.s-XsEmFtvddWTw{max-width:14rem;margin:1rem auto;line-height:1.35}@media(min-width: 480px){h1.s-XsEmFtvddWTw{max-width:none}p.s-XsEmFtvddWTw{max-width:none}}.s-XsEmFtvddWTw{}\\"
__vite__updateStyle(__vite__id, __vite__css)
import.meta.hot.accept()
export default __vite__css
import.meta.hot.prune(() => __vite__removeStyle(__vite__id))"
`;

exports[`serve fs output > src/assets/svelte.png__import.js 1`] = `"export default \\"/src/assets/svelte.png\\""`;

exports[`serve fs output > src/content.js.js 1`] = `
"import App from '/src/App.svelte.js'

const html = \`<div id=\\"crx-app\\"></div>\`
const target = new DOMParser().parseFromString(html, 'text/html').body
  .firstElementChild
document.body.append(target)

const app = new App({ target })

export default app
"
`;

exports[`serve fs output > src/content.js-loader.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"src/content.js.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`serve fs output > src/lib/Counter.svelte.js 1`] = `
"import { createHotContext as __vite__createHotContext } from \\"/vendor/vite-client.js\\";import.meta.hot = __vite__createHotContext(\\"/src/lib/Counter.svelte.js\\");/* tests/out/vite-svelte/src/lib/Counter.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev as SvelteComponentDev$,
	add_location as add_location$,
	append_dev as append_dev$,
	attr_dev as attr_dev$,
	detach_dev as detach_dev$,
	dispatch_dev as dispatch_dev$,
	element as element$,
	globals as globals$,
	init as init$,
	insert_dev as insert_dev$,
	listen_dev as listen_dev$,
	noop as noop$,
	safe_not_equal as safe_not_equal$,
	set_data_dev as set_data_dev$,
	text as text$,
	validate_slots as validate_slots$
} from \\"/vendor/svelte_internal.js__v--hash.js\\";

const { Error: Error$, Object: Object$, console: console$ } = globals$;
const file$ = \\"tests/out/vite-svelte/src/lib/Counter.svelte\\";

function create_fragment(ctx) {
	let button$;
	let t0$;
	let t1$;
	let mounted;
	let dispose;

	const block$ = {
		c: function create() {
			button$ = element$(\\"button\\");
			t0$ = text$(\\"Clicks: \\");
			t1$ = text$(/*count*/ ctx[0]);
			attr_dev$(button$, \\"class\\", \\"s-lXDMeZ-gXAhl\\");
			add_location$(button$, file$, 7, 0, 83);
		},
		l: function claim(nodes) {
			throw new Error$(\\"options.hydrate only works if the component was compiled with the \`hydratable: true\` option\\");
		},
		m: function mount(target, anchor) {
			insert_dev$(target, button$, anchor);
			append_dev$(button$, t0$);
			append_dev$(button$, t1$);

			if (!mounted) {
				dispose = listen_dev$(button$, \\"click\\", /*increment*/ ctx[1], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*count*/ 1) set_data_dev$(t1$, /*count*/ ctx[0]);
		},
		i: noop$,
		o: noop$,
		d: function destroy(detaching) {
			if (detaching) detach_dev$(button$);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev$(\\"SvelteRegisterBlock\\", {
		block: block$,
		id: create_fragment.name,
		type: \\"component\\",
		source: \\"\\",
		ctx
	});

	return block$;
}

function instance$($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots$('Counter', slots, []);
	let count = 0;

	const increment = () => {
		$$invalidate(0, count += 1);
	};

	const writable_props = [];

	Object$.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console$.warn(\`<Counter> was created with unknown prop '\${key}'\`);
	});

	$$self.$capture_state = () => ({ count, increment });

	$$self.$inject_state = $$props => {
		if ('count' in $$props) $$invalidate(0, count = $$props.count);
	};

	if ($$props && \\"$$inject\\" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [count, increment];
}

class Counter$ extends SvelteComponentDev$ {
	constructor(options) {
		super(options);
		init$(this, options, instance$, create_fragment, safe_not_equal$, {});

		dispatch_dev$(\\"SvelteRegisterComponent\\", {
			component: this,
			tagName: \\"Counter$\\",
			options,
			id: create_fragment.name
		});
	}
}

import * as ___SVELTE_HMR_HOT_API from '/vendor/svelte-hmr-runtime-hot-api-esm.js__v--hash.js';import { adapter as ___SVELTE_HMR_HOT_API_PROXY_ADAPTER } from '/vendor/svelte-hmr-runtime-proxy-adapter-dom.js__v--hash.js';if (import.meta && import.meta.hot) { if (false) import.meta.hot.acceptExports(['default']);; Counter$ = ___SVELTE_HMR_HOT_API.applyHmr({ m: import.meta, id: \\"<root>/src/lib/Counter.svelte\\", hotOptions: {\\"preserveLocalState\\":false,\\"noPreserveStateKey\\":[\\"@hmr:reset\\",\\"@!hmr\\"],\\"preserveAllLocalStateKey\\":\\"@hmr:keep-all\\",\\"preserveLocalStateKey\\":\\"@hmr:keep\\",\\"noReload\\":false,\\"optimistic\\":false,\\"acceptNamedExports\\":true,\\"acceptAccessors\\":true,\\"injectCss\\":false,\\"cssEjectDelay\\":100,\\"native\\":false,\\"importAdapterName\\":\\"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\\",\\"noOverlay\\":true,\\"allowLiveBinding\\":false,\\"partialAccept\\":true}, Component: Counter$, ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER, acceptable: true, preserveLocalState: false, emitCss: true, }); }
export default Counter$;


import \\"/src/lib/Counter.svelte__svelte_type--style_lang.css.js\\";
"
`;

exports[`serve fs output > src/lib/Counter.svelte__svelte_type--style_lang.css.js 1`] = `
"import { createHotContext as __vite__createHotContext } from \\"/vendor/vite-client.js\\";import.meta.hot = __vite__createHotContext(\\"/src/lib/Counter.svelte__svelte_type--style_lang.css.js\\");import { updateStyle as __vite__updateStyle, removeStyle as __vite__removeStyle } from \\"/vendor/vite-client.js\\"
const __vite__id = \\"<root>/src/lib/Counter.svelte?svelte&type=style&lang.css\\"
const __vite__css = \\"button.s-lXDMeZ-gXAhl{font-family:inherit;font-size:inherit;padding:1em 2em;color:#ff3e00;background-color:rgba(255, 62, 0, 0.1);border-radius:2em;border:2px solid rgba(255, 62, 0, 0);outline:none;width:200px;font-variant-numeric:tabular-nums;cursor:pointer}button.s-lXDMeZ-gXAhl:focus{border:2px solid #ff3e00}button.s-lXDMeZ-gXAhl:active{background-color:rgba(255, 62, 0, 0.2)}.s-lXDMeZ-gXAhl{}\\"
__vite__updateStyle(__vite__id, __vite__css)
import.meta.hot.accept()
export default __vite__css
import.meta.hot.prune(() => __vite__removeStyle(__vite__id))"
`;

exports[`serve fs output > src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <title>Waiting for the extension service worker...</title>
    <script src=\\"/assets/precontroller.hash.js\\"></script>
  </head>
  <body>
    <h1>Waiting for service worker</h1>

    <p>
      If you see this message, it means the service worker has not loaded fully.
    </p>

    <p>This page is never added in production.</p>
  </body>
</html>
"
`;
